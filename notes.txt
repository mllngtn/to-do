Why use "controller as"?

	It makes it more readable - instead of using $scope all the time, everything becomes dotted (main.title, for example), which means you can track everything back to its controller more easily.
	"Prevents scope bleed when using multiple nested controllers"

Why "var vm = this"?

	Because the meaning of "this" can change depending on context...
	"The this keyword is contextual and when used within a function inside a controller may change its context. Capturing the context of this avoids encountering this problem."
	

TASKZ	
	
	karma, protractor, jasmine: unit testing
		Write a test suite
		add some tests for new features
		add those features!
	
	Research and create some:
		directives
		multiple controllers
		$scope and what it does
		
		

1) TURN MY DAYS OF THE WEEK INTO A FACTORY (https://thinkster.io/egghead/ngfilter/)

2) RE-ORDER TASKS BY DRAGGING-AND-DROPPING IN THE DOM

3) DIRECTIVES: PROGRAMMATICALLY CHANGE AN ELEMENT'S ATTRIBUTES (https://thinkster.io/egghead/useful-behaviors/)



What it does right now:


1) Array of days
	Tested: done

2) Add an untimed task to a day
	Tested: 

3) Add a timed task to a day
	Tested:

4) Error message if day or task name are undefined
	Tested:

5) timed tasks display underneath untimed tasks, and are presented in time order
	Tested:

6) Delete a task
	Tested:


What it should also do:

7) drag-and-drop a task into a different day array
	Tested:
	Made:

8) drag-and-drop an untimed task to a different position on its untimed task-list
	Tested:
	Made:
	
9) edit (or delete) the time on a task
	Tested:
	Made:
	
10) edit (but NOT delete) the task name
	Tested:
	Made:
	
11) Hide the day divs when they are empty
	Tested:
	Made:
	
12) Allow tasks without days to be added to a general 'to-do' list at the top
	Tested:
	Made:
	